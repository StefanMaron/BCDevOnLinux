#!/bin/bash

# Status check script for BC and SQL containers

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Detect which compose file to use
if [ -f "compose.yml" ]; then
    COMPOSE_FILE="compose.yml"
elif [ -f "compose-no-sql.yml" ]; then
    COMPOSE_FILE="compose-no-sql.yml"
else
    echo -e "${RED}Error: No compose file found!${NC}"
    exit 1
fi

echo "Container Status Check"
echo "====================="
echo ""

# Function to check container status
check_container() {
    local service=$1
    local display_name=$2
    
    # Get container status
    local status=$(docker compose -f "$COMPOSE_FILE" ps --format json "$service" 2>/dev/null | jq -r '.[0].State' 2>/dev/null)
    local health=$(docker compose -f "$COMPOSE_FILE" ps --format json "$service" 2>/dev/null | jq -r '.[0].Health' 2>/dev/null)
    
    echo -n "$display_name: "
    
    if [ -z "$status" ]; then
        echo -e "${RED}Not found${NC}"
        return 1
    elif [ "$status" = "running" ]; then
        if [ "$health" = "healthy" ]; then
            echo -e "${GREEN}Running (Healthy)${NC}"
        elif [ "$health" = "unhealthy" ]; then
            echo -e "${RED}Running (Unhealthy)${NC}"
        elif [ "$health" = "starting" ]; then
            echo -e "${YELLOW}Running (Starting...)${NC}"
        else
            echo -e "${GREEN}Running${NC}"
        fi
        return 0
    else
        echo -e "${RED}$status${NC}"
        return 1
    fi
}

# Check each container
bc_running=0
sql_running=0

if check_container "bc" "BC Container"; then
    bc_running=1
fi

if check_container "sql" "SQL Container"; then
    sql_running=1
fi

echo ""

# Additional checks if containers are running
if [ $bc_running -eq 1 ]; then
    echo "BC Service Checks:"
    
    # Check Wine version
    echo -n "  Wine Version: "
    wine_version=$(docker compose -f "$COMPOSE_FILE" exec -T bc wine --version 2>/dev/null)
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}$wine_version${NC}"
    else
        echo -e "${RED}Unable to check${NC}"
    fi
    
    # Check if BC Server process is running
    echo -n "  BC Server Process: "
    if docker compose -f "$COMPOSE_FILE" exec -T bc pgrep -f "Microsoft.Dynamics.Nav.Server" >/dev/null 2>&1; then
        echo -e "${GREEN}Running${NC}"
    else
        echo -e "${RED}Not Running${NC}"
    fi
fi

if [ $sql_running -eq 1 ]; then
    echo ""
    echo "SQL Service Checks:"
    
    # Check SQL Server status
    echo -n "  SQL Server: "
    if docker compose -f "$COMPOSE_FILE" exec -T sql /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "${SA_PASSWORD:-P@ssw0rd123!}" -Q "SELECT @@VERSION" -C -N -h -1 >/dev/null 2>&1; then
        echo -e "${GREEN}Accepting connections${NC}"
    else
        echo -e "${RED}Not accepting connections${NC}"
    fi
fi

echo ""

# Quick commands reminder
if [ $bc_running -eq 0 ] || [ $sql_running -eq 0 ]; then
    echo "To start all containers:"
    echo "  docker compose -f $COMPOSE_FILE up -d"
    echo ""
fi

echo "Quick commands:"
echo "  ./bc          - Access BC container"
echo "  ./sql         - Access SQL container"
echo "  ./logs        - View container logs"